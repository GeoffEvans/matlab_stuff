% Animates lenses with "opposite" refractive indices
% Sweeps up, down, centre, right, inf, left centre.

global opticalLength maxY minY stepY;
opticalLength = 200;
maxY = 10;
minY = -10;
stepY = 0.01;

f = figure();
title('Lenses','Color',[.6 0 0]);

for k = 1:k1
    rays1(k) = PointSourceRays([0, 0 + 5*k/k1], 100, 1);
    rays2(k) = PointSourceRays([0, 0 + 5*k/k1], 100, 1);
    interfaces1() = GetSphericalFaceLens(60,30);
    interfaces2() = GetInvertedSphericalFaceLens(100,40);
end
for k = 1:k2
    rays1(k1+k) = PointSourceRays([0, 5 - 5*k/k2], 100, 1);
    rays2(k1+k) = PointSourceRays([0, 0 - 5*k/k2], 100, 1);
    interfaces1() = GetSphericalFaceLens(100,30);
    interfaces2() = GetInvertedSphericalFaceLens(100,30);
end
for k = 1:k3
    rays1(k) = PointSourceRays([0, 0 + 5*k/k1], 100, 1);
    rays2(k) = PointSourceRays([0, 0 + 5*k/k1], 100, 1);
    interfaces1() = GetSphericalFaceLens(60,30);
    interfaces2() = GetInvertedSphericalFaceLens(60,30);
end
for k = 1:k4
    rays1(k1+k) = PointSourceRays([0, 5 - 5*k/k2], 100, 1);
    rays2(k1+k) = PointSourceRays([0, 0 - 5*k/k2], 100, 1);
    interfaces1() = GetInvertedSphericalFaceLens(60,30);
    interfaces2() = GetSphericalFaceLens(60,30);
end

subplot(2,1,1);
ViewSystem(interfaces1(1), rays1(1));
subplot(2,1,2)
ViewSystem(interfaces2(1), rays2(1));
f(1) = getframe(gcf);
[im,map] = rgb2ind(f(1).cdata, 256, 'nodither');
 
for j = 2:length(rays)
    subplot(2,1,1);
    ViewSystem(interfaces1(j), rays1(j));
    subplot(2,1,2)
    ViewSystem(interfaces2(j), rays2(j));
    f(j) = getframe(gcf);
    im(:,:,1,j) = rgb2ind(f(j).cdata, map, 'nodither');
end

imwrite(im,map, strcat('animation', '.gif'), 'DelayTime', 0, 'LoopCount', inf)

    